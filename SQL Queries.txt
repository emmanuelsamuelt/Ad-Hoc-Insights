-- REQUEST 1: Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.
-- OUTPUT: A distinct list of markets sorted alphabetically.

SELECT DISTINCT market
FROM dim_customer
WHERE customer = "Atliq Exclusive" AND region = "APAC"
ORDER BY market;

-- REQUEST 2: What is the percentage of unique product increase in 2021 vs. 2020?
-- OUTPUT: Fields include:
--         unique_products_2020
--         unique_products_2021
--         percentage_change

WITH cte1 AS (
    SELECT COUNT(DISTINCT product_code) AS unique_products_2020
    FROM fact_sales_monthly
    WHERE fiscal_year = 2020
), 
cte2 AS (
    SELECT COUNT(DISTINCT product_code) AS unique_products_2021
    FROM fact_sales_monthly
    WHERE fiscal_year = 2021
)
SELECT
    unique_products_2020,
    unique_products_2021,
    (unique_products_2021 - unique_products_2020) * 100.0 / unique_products_2020 AS percentage_change
FROM cte1
CROSS JOIN cte2;

-- REQUEST 3: Provide a report with all the unique product counts for each segment.
-- OUTPUT: Fields include:
--         segment
--         product_count (sorted in descending order)

SELECT 
    segment,
    COUNT(DISTINCT product_code) AS product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;

-- REQUEST 4: Identify the segment with the most increase in unique products in 2021 vs. 2020.
-- OUTPUT: Fields include:
--         segment
--         product_count_2020
--         product_count_2021
--         difference (sorted by the largest difference)

WITH cte AS (
    SELECT 
        p.segment,
        COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN m.product_code END) AS product_count_2020,
        COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN m.product_code END) AS product_count_2021
    FROM fact_sales_monthly m
    JOIN dim_product p ON m.product_code = p.product_code
    GROUP BY p.segment
)
SELECT 
    segment,
    product_count_2020,
    product_count_2021,
    product_count_2021 - product_count_2020 AS difference
FROM cte
ORDER BY difference DESC;

-- REQUEST 5: Get the products with the highest and lowest manufacturing costs.
-- OUTPUT: Fields include:
--         product_code
--         product
--         manufacturing_cost

SELECT 
    m.product_code,
    p.product,
    m.manufacturing_cost
FROM fact_manufacturing_cost m
JOIN dim_product p ON m.product_code = p.product_code
WHERE manufacturing_cost IN (
    SELECT MAX(manufacturing_cost) FROM fact_manufacturing_cost
    UNION
    SELECT MIN(manufacturing_cost) FROM fact_manufacturing_cost
)
ORDER BY manufacturing_cost DESC;

-- REQUEST 6: Generate a report of the top 5 customers with the highest average pre_invoice_discount_pct in 2021 for the Indian market.
-- OUTPUT: Fields include:
--         customer_code
--         customer
--         average_discount_percentage

SELECT 
    d.customer_code,
    c.customer,
    CONCAT(ROUND(AVG(pre_invoice_discount_pct) * 100, 2), '%') AS avg_dis_pct
FROM fact_pre_invoice_deductions d
JOIN dim_customer c ON d.customer_code = c.customer_code
WHERE fiscal_year = 2021 AND market = "India"
GROUP BY d.customer_code, c.customer
ORDER BY AVG(pre_invoice_discount_pct) DESC
LIMIT 5;

-- REQUEST 7: Get the monthly gross sales amount for "Atliq Exclusive" to analyze high and low-performing months.
-- OUTPUT: Fields include:
--         Month
--         Year
--         Gross Sales Amount

SELECT 
    MONTHNAME(m.date) AS Month,
    m.fiscal_year AS Year,
    ROUND(SUM(m.sold_quantity * g.gross_price), 2) AS gross_sales_amount
FROM fact_sales_monthly m
JOIN fact_gross_price g ON m.product_code = g.product_code
JOIN dim_customer c ON c.customer_code = m.customer_code
WHERE c.customer = "Atliq Exclusive"
GROUP BY Month, Year
ORDER BY Year;

-- REQUEST 8: Find the quarter in 2020 with the maximum total_sold_quantity.
-- OUTPUT: Fields include:
--         Quarter
--         total_sold_quantity

SELECT 
    CASE
        WHEN MONTH(date) IN (9, 10, 11) THEN "Q1"
        WHEN MONTH(date) IN (12, 1, 2) THEN "Q2"
        WHEN MONTH(date) IN (3, 4, 5) THEN "Q3"
        WHEN MONTH(date) IN (6, 7, 8) THEN "Q4"
    END AS Quarter,
    SUM(sold_quantity) AS total_sold_qty
FROM fact_sales_monthly
WHERE fiscal_year = 2020
GROUP BY Quarter
ORDER BY total_sold_qty DESC;

-- REQUEST 9: Determine which channel contributed the most gross sales in 2021 and its percentage contribution.
-- OUTPUT: Fields include:
--         channel
--         gross_sales_mln
--         percentage_contribution

WITH cte1 AS (
    SELECT 
        c.channel,
        ROUND(SUM(m.sold_quantity * g.gross_price) / 1000000, 2) AS gross_sales_mln
    FROM dim_customer c
    JOIN fact_sales_monthly m ON c.customer_code = m.customer_code
    JOIN fact_gross_price g ON m.product_code = g.product_code
    WHERE m.fiscal_year = 2021
    GROUP BY c.channel
)
SELECT 
    channel,
    gross_sales_mln,
    CONCAT(ROUND(gross_sales_mln * 100.0 / (SELECT SUM(gross_sales_mln) FROM cte1), 2), '%') AS pct_contribution
FROM cte1
ORDER BY pct_contribution DESC;

-- REQUEST 10: Get the top 3 products in each division by total_sold_quantity in 2021.
-- OUTPUT: Fields include:
--         division
--         product_code
--         product
--         total_sold_quantity
--         rank_order

WITH cte1 AS (
    SELECT 
        p.division,
        s.product_code,
        p.product,
        SUM(s.sold_quantity) AS total_sold_quantity
    FROM dim_product p
    JOIN fact_sales_monthly s ON p.product_code = s.product_code
    WHERE s.fiscal_year = 2021
    GROUP BY p.division, s.product_code, p.product
), 
cte2 AS (
    SELECT 
        division,
        product_code,
        product,
        total_sold_quantity,
        RANK() OVER (PARTITION BY division ORDER BY total_sold_quantity DESC) AS rank_order
    FROM cte1
)
SELECT 
    division,
    product_code,
    product,
    total_sold_quantity,
    rank_order
FROM cte2
WHERE rank_order <= 3;
